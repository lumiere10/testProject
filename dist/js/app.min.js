/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Get the modal\nconst modal = document.getElementById(\"myModal\");\n\n// Get the button that opens the modal\nconst btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\nconst span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on the button, open the modal\nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}\n\nconst btnOpen = document.getElementById(\"btn-open\");\nconst btnClose = document.getElementById(\"btn-close\");\nconst blocks = document.querySelectorAll(\".benefits__item.not-mob\");\nconst blocksWrapp = document.querySelector(\".benefits\");\nconst blockAfter = document.querySelector(\".benefits__item:not(.not-mob)\");\nbtnClose.style.opacity = \"0\";\nblockAfter.classList.add('hideAfter')\n\nbtnOpen.addEventListener('click', function() {\n\tthis.style.opacity = \"0\";\n\tbtnClose.style.opacity = \"1\";\n\tblocks.forEach(function(item) {\n\t\titem.classList.add('show');\n\t})\n\tblockAfter.classList.remove('hideAfter');\n\tblocksWrapp.style.position = \"relative\"\n\tblocksWrapp.style.left = \"0%\"\n\tblocksWrapp.style.transform = \"translateX(-0%)\"\n})\nbtnClose.addEventListener('click', function() {\n\tthis.style.opacity = \"0\";\n\tbtnOpen.style.opacity = \"1\";\n\tblocks.forEach(function(item) {\n\t\titem.classList.remove('show')\n\t})\n\tblockAfter.classList.add('hideAfter')\n\tblocksWrapp.style.position = \"absolute\"\n\tblocksWrapp.style.left = \"50%\"\n\tblocksWrapp.style.transform = \"translateX(-50%)\"\n})\n\n//# sourceURL=webpack://test/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;